fpkmtidy <- as.data.frame(fpkmtidy)
fpkmtidy[fpkmtidy$age < 20,4] <- "<19"
fpkmtidy[fpkmtidy$age >= 20 & fpkmtidy$age <40 ,4] <- "20-39"
fpkmtidy[fpkmtidy$age >= 40 & fpkmtidy$age < 60 ,4] <- "40-59"
fpkmtidy[fpkmtidy$age >= 60 ,4] <- ">60"
colnames(fpkmtidy)[4] <- "group"
fpkmtidy$group <-  factor(fpkmtidy$group, c("<19","20-39s","40-59",">60"))
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
library(tidyverse)
x <- read.delim("~/Downloads/GSE113957_fpkm.txt")
fpkm <- as.matrix(x[,-c(1:8)])
rownames(fpkm) <- gsub("\\|.*", "",x$Annotation.Divergence)
f <- function(x) {
if (diff(range(x)) == 0) list() else shapiro.test(x)$p.value
}
y <- unlist(apply(fpkm, 1, f))
y[c("L3MBTL2","VAMP7","WDR55",'TMEM199','RBCK1',"PUM1","TBP","GUSB","OAZ1","CDKN1A","APOD","TFRC")]
age <- as.numeric(sub("[Y-y].*" , "", sub(".*_" ,"" , sub("_[F-M;f-m].*", "",colnames(fpkm)))))
fpkm.t <- as.data.frame(t(fpkm))
fpkm.t$age <- age
fpkmtidy <- fpkm.t %>%
pivot_longer(-age, names_to = "genes",values_to = "fpkm")
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"PUM1","TBP","GUSB","OAZ1","CDKN1A","APOD","TFRC")
fpkmtidy <- as.data.frame(fpkmtidy)
fpkmtidy[fpkmtidy$age < 20,4] <- "<19"
fpkmtidy[fpkmtidy$age >= 20 & fpkmtidy$age <40 ,4] <- "20-39"
fpkmtidy[fpkmtidy$age >= 40 & fpkmtidy$age < 60 ,4] <- "40-59"
fpkmtidy[fpkmtidy$age >= 60 ,4] <- ">60"
colnames(fpkmtidy)[4] <- "group"
fpkmtidy$group <-  factor(fpkmtidy$group, c("<19","20-39s","40-59",">60"))
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
library(tidyverse)
x <- read.delim("~/Downloads/GSE113957_fpkm.txt")
fpkm <- as.matrix(x[,-c(1:8)])
rownames(fpkm) <- gsub("\\|.*", "",x$Annotation.Divergence)
f <- function(x) {
if (diff(range(x)) == 0) list() else shapiro.test(x)$p.value
}
y <- unlist(apply(fpkm, 1, f))
y[c("L3MBTL2","VAMP7","WDR55",'TMEM199','RBCK1',"PUM1","TBP","GUSB","OAZ1","CDKN1A","APOD","TFRC")]
age <- as.numeric(sub("[Y-y].*" , "", sub(".*_" ,"" , sub("_[F-M;f-m].*", "",colnames(fpkm)))))
fpkm.t <- as.data.frame(t(fpkm))
fpkm.t$age <- age
fpkmtidy <- fpkm.t %>%
pivot_longer(-age, names_to = "genes",values_to = "fpkm")
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"PUM1","TBP","GUSB","OAZ1","CDKN1A","APOD","TFRC")
fpkmtidy <- as.data.frame(fpkmtidy)
fpkmtidy[fpkmtidy$age < 20,4] <- "<19"
fpkmtidy[fpkmtidy$age >= 20 & fpkmtidy$age <40 ,4] <- "20-39"
fpkmtidy[fpkmtidy$age >= 40 & fpkmtidy$age < 60 ,4] <- "40-59"
fpkmtidy[fpkmtidy$age >= 60 ,4] <- ">60"
colnames(fpkmtidy)[4] <- "group"
fpkmtidy$group <-  factor(fpkmtidy$group, c("<19","20-39","40-59",">60"))
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log10')
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"CDKN1A","APOD","TFRC")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log10')
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log10')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes)
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin() +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin(colors = group) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin(aes(colors = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm)) +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2')
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM")
y
y["SYBL1"]
y["VAMP"]
y["VAMP7"]
y["ACE2"]
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_classic()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_light()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_minimal()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()+
geom_smooth()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","ACE2","TMPRSS2")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","ACE2","TMPRSS2","GAPDH")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","FCGR2B")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
fpkmtidy[fpkmtidy$gene=="FCGR2B"]
fpkmtidy[fpkmtidy$genes=="FCGR2B",]
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","ATP5G3")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
#scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","NDUFB11")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","UQCRQ")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","UQCRFS1")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","COL3A1")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","COL1A1")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","COL4A5")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","CTSS")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","IGJ")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","LYZ")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","MGST1")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD","GSTA1")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
gene <- c("L3MBTL2","WDR55",'TMEM199','RBCK1',"APOD")
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
1^2
8^2
log2(64)
2^6
2^8
ggplot(subset(fpkmtidy, genes %in% gene),  aes(x = group, y = fpkm), ylab = "") +
geom_violin(aes(fill = group)) +
facet_wrap(~genes) +
scale_y_continuous(trans='log2') +
ylab("log2 FPKM") +
theme_bw()
if(!require(here, quietly = F)) install.packages("here")
if(!require(tidyverse, quietly = F)) install.packages("tidyverse")
if(!require(edgeR, quietly = T)) BiocManager::install("edgeR")
if(!require(RUVseq, quietly = T)) BiocManager::install("RUVseq")
if(!require(RUVSeq, quietly = T)) BiocManager::install("RUVSeq")
#Raw counts file
counts <- read.delim(here("data","gene_counts_merged_datasets_children_adults_elderly.txt"))
#Raw counts corrected with Combat-seq
#counts <- read.delim(here("results","gene_counts_batch-effect_correction_Adults-Children_UK_Gambia_UK-ICL_AgesBatch1_Combat-seq_with_nameofG.txt"))
#Raw counts corrected with Combat-seq curettage
#counts <- read.delim(here("data","gene_counts_merged_datasets_children_adults_elderly_curettage_Combat-seq.tsv"))
phenodata <- read.delim(here("data", "sample_information.txt"))
phenodata <- phenodata[phenodata$timepoint == "baseline" & phenodata$sampling.method == "curettage",]
hgnc <- counts$nameofG
rownames(counts) <- counts$ID
counts <- counts[ , colnames(counts) %in% phenodata$label]
View(counts)
?RUVg
library(RUVSeq)
?RUVg
gene <- c("ENSG00000100395","ENSG00000120314",'ENSG00000244045','ENSG00000125826')
is(counts)
normcounts <- RUVg(counts, gene, k=1)
normcounts <- RUVg(as.matrix(counts), gene, k=1)
is(normcounts)
dim(normcounts$W)
head(normcounts$W)
plotRLE(normcounts)
plotPCA(normcounts)
plotPCA(normcounts, col=colors[x], cex=1.2)
pData(normcounts)
normcounts$W
dim(normcounts$normalizedCounts)
View(counts)
plotRLE(normcounts$W)
normcounts$W
plotPCA(normcounts$normalizedCounts)
plotPCA(normcounts$normalizedCounts, col=phenodata$Group)
colors[]
?ploTPCA
?plotPCA
?RUVg
head(normcounts$normalizedCounts[,1:3])
design <- model.matrix(~0 + Group:sex + normcounts$W, data=phenodata)
deseign
design
design <- model.matrix(~0 + Group:sex:normcounts$W, data=phenodata)
design
View(phenodata)
newSeqExpressionSet(as.matrix(counts), phenoData = phenodata[,c("label","Group")])
#Raw counts file
counts <- read.delim(here("data","gene_counts_merged_datasets_children_adults_elderly.txt"))
rownames(counts) <- counts$ID
counts <- subset(counts, select = as.vector(phenodata$label))
ncounts <- newSeqExpressionSet(as.matrix(counts),
phenoData = phenodata[,c("label","Group")])
phenodata[,c("label","Group")]
ncounts <- newSeqExpressionSet(as.matrix(counts),
phenoData = phenodata[,c("Group","label")])
phenodata[,c("Group","label")]
data.frame(phenodata$Group, row.names=phenodata$label)
ncounts <- newSeqExpressionSet(as.matrix(counts),
phenoData = data.frame(phenodata$Group,
row.names=phenodata$label))
ncounts
plotRLE(set)
plotRLE(ncounts)
plotPCA(ncounts)
set1 <- RUVg(set, gene, k=1)
set1 <- RUVg(ncounts, gene, k=1)
pData(set1)
pData(set1)
plotRLE(set1)
plotPCA(set1)
design <- model.matrix(~0 + Group:sex:W_1, data=pData(set1))
pData(set1)
design <- model.matrix(~0 + phenodata.Group:sex:W_1, data=pData(set1))
ncounts <- newSeqExpressionSet(as.matrix(counts),
phenoData = data.frame(Group = phenodata$Group,
sex = phenodata$sex,
row.names=phenodata$label))
set1 <- RUVg(ncounts, gene, k=1)
pData(set1)
pData(set1)
design <- model.matrix(~0 + phenodata.Group:sex:W_1, data=pData(set1))
design <- model.matrix(~0 + Group:sex:W_1, data=pData(set1))
design
View(design)
y <- DGEList(counts= counts, genes = hgnc)
keep <- filterByExpr(y, design)
y <- y[keep,]
y <- calcNormFactors(y)
y <- estimateDisp(y, design)
plotBCV(y)
fit <- glmQLFit(y, design)
adults.vs.children.f <- topTags(glmQLFTest(fit, contrast=c(-1,1,0,0,0,0)),
n=NULL)$table
elderly.vs.adults.f <- topTags(glmQLFTest(fit, contrast=c(1,0,-1,0,0,0)),
n=NULL)$table
elderly.vs.children.f <- topTags(glmQLFTest(fit, contrast=c(0,1,-1,0,0,0)),
n=NULL)$table
adults.vs.children.m <- topTags(glmQLFTest(fit, contrast=c(0,0,0,-1,1,0)),
n=NULL)$table
elderly.vs.adults.m <- topTags(glmQLFTest(fit, contrast=c(0,0,0,1,0,-1)),
n=NULL)$table
elderly.vs.children.m <- topTags(glmQLFTest(fit, contrast=c(0,0,0,0,1,-1)),
n=NULL)$table
up.elderly.vs.children.f <- nrow(elderly.vs.children.f[elderly.vs.children.f$logFC > 1 &
elderly.vs.children.f$FDR < 0.01,])
down.elderly.vs.children.f <- nrow(elderly.vs.children.f[elderly.vs.children.f$logFC < -1 &
elderly.vs.children.f$FDR < 0.01,])
up.elderly.vs.children.m <- nrow(elderly.vs.children.m[elderly.vs.children.m$logFC > 1 &
elderly.vs.children.m$FDR < 0.01,])
down.elderly.vs.children.m <- nrow(elderly.vs.children.m[elderly.vs.children.m$logFC < -1 &
elderly.vs.children.m$FDR < 0.01,])
up.elderly.vs.adults.f <- nrow(elderly.vs.adults.f[elderly.vs.adults.f$logFC > 1 &
elderly.vs.adults.f$FDR < 0.01,])
down.elderly.vs.adults.f <- nrow(elderly.vs.adults.f[elderly.vs.adults.f$logFC < -1 &
elderly.vs.adults.f$FDR < 0.01,])
up.elderly.vs.adults.m <- nrow(elderly.vs.adults.m[elderly.vs.adults.m$logFC > 1 &
elderly.vs.adults.m$FDR < 0.01,])
down.elderly.vs.adults.m <- nrow(elderly.vs.adults.m[elderly.vs.adults.m$logFC < -1 &
elderly.vs.adults.m$FDR < 0.01,])
up.adults.vs.children.f <- nrow(adults.vs.children.f[adults.vs.children.f$logFC > 1 &
adults.vs.children.f$FDR < 0.01,])
down.adults.vs.children.f <- nrow(adults.vs.children.f[adults.vs.children.f$logFC < -1 &
adults.vs.children.f$FDR < 0.01,])
up.adults.vs.children.m <- nrow(adults.vs.children.m[adults.vs.children.m$logFC > 1 &
adults.vs.children.m$FDR < 0.01,])
down.adults.vs.children.m <- nrow(adults.vs.children.m[adults.vs.children.m$logFC < -1 &
adults.vs.children.m$FDR < 0.01,])
compar <- c(rep(c("Adults.vs.Children"),2),
rep(c("Elderly.vs.Children"),2),
rep(c("Elderly.vs.Adults"),2))
up <- c(up.adults.vs.children.f, up.adults.vs.children.m,
up.elderly.vs.children.f, up.elderly.vs.children.m,
up.elderly.vs.adults.f, up.elderly.vs.adults.m)
down <- c(down.adults.vs.children.f, down.adults.vs.children.m,
down.elderly.vs.children.f, down.elderly.vs.children.m,
down.elderly.vs.adults.f, down.elderly.vs.adults.m)
df <- data.frame(Comparison = compar,
Sex = rep(c("F","M"),3),
Up = up,
Down = down)
df
#Raw counts file
counts <- read.delim(here("data","gene_counts_merged_datasets_children_adults_elderly.txt"))
#Raw counts corrected with Combat-seq
#counts <- read.delim(here("results","gene_counts_batch-effect_correction_Adults-Children_UK_Gambia_UK-ICL_AgesBatch1_Combat-seq_with_nameofG.txt"))
#Raw counts corrected with Combat-seq curettage
#counts <- read.delim(here("data","gene_counts_merged_datasets_children_adults_elderly_curettage_Combat-seq.tsv"))
phenodata <- read.delim(here("data", "sample_information.txt"))
phenodata <- phenodata[phenodata$timepoint == "baseline" & phenodata$sampling.method == "curettage",]
hgnc <- counts$nameofG
rownames(counts) <- counts$ID
counts <- subset(counts, select = as.vector(phenodata$label))
gene <- c("ENSG00000100395","ENSG00000120314",'ENSG00000244045','ENSG00000125826')
ncounts <- newSeqExpressionSet(as.matrix(counts),
phenoData = data.frame(Group = phenodata$Group,
sex = phenodata$sex,
row.names=phenodata$label))
set1 <- RUVg(ncounts, gene, k=5)
design <- model.matrix(~0 + Group:sex:W_1, data=pData(set1))
y <- DGEList(counts= counts, genes = hgnc)
keep <- filterByExpr(y, design)
y <- y[keep,]
y <- calcNormFactors(y)
y <- estimateDisp(y, design)
fit <- glmQLFit(y, design)
adults.vs.children.f <- topTags(glmQLFTest(fit, contrast=c(-1,1,0,0,0,0)),
n=NULL)$table
elderly.vs.adults.f <- topTags(glmQLFTest(fit, contrast=c(1,0,-1,0,0,0)),
n=NULL)$table
elderly.vs.children.f <- topTags(glmQLFTest(fit, contrast=c(0,1,-1,0,0,0)),
n=NULL)$table
adults.vs.children.m <- topTags(glmQLFTest(fit, contrast=c(0,0,0,-1,1,0)),
n=NULL)$table
elderly.vs.adults.m <- topTags(glmQLFTest(fit, contrast=c(0,0,0,1,0,-1)),
n=NULL)$table
elderly.vs.children.m <- topTags(glmQLFTest(fit, contrast=c(0,0,0,0,1,-1)),
n=NULL)$table
up.elderly.vs.children.f <- nrow(elderly.vs.children.f[elderly.vs.children.f$logFC > 1 &
elderly.vs.children.f$FDR < 0.01,])
down.elderly.vs.children.f <- nrow(elderly.vs.children.f[elderly.vs.children.f$logFC < -1 &
elderly.vs.children.f$FDR < 0.01,])
up.elderly.vs.children.m <- nrow(elderly.vs.children.m[elderly.vs.children.m$logFC > 1 &
elderly.vs.children.m$FDR < 0.01,])
down.elderly.vs.children.m <- nrow(elderly.vs.children.m[elderly.vs.children.m$logFC < -1 &
elderly.vs.children.m$FDR < 0.01,])
up.elderly.vs.adults.f <- nrow(elderly.vs.adults.f[elderly.vs.adults.f$logFC > 1 &
elderly.vs.adults.f$FDR < 0.01,])
down.elderly.vs.adults.f <- nrow(elderly.vs.adults.f[elderly.vs.adults.f$logFC < -1 &
elderly.vs.adults.f$FDR < 0.01,])
up.elderly.vs.adults.m <- nrow(elderly.vs.adults.m[elderly.vs.adults.m$logFC > 1 &
elderly.vs.adults.m$FDR < 0.01,])
down.elderly.vs.adults.m <- nrow(elderly.vs.adults.m[elderly.vs.adults.m$logFC < -1 &
elderly.vs.adults.m$FDR < 0.01,])
up.adults.vs.children.f <- nrow(adults.vs.children.f[adults.vs.children.f$logFC > 1 &
adults.vs.children.f$FDR < 0.01,])
down.adults.vs.children.f <- nrow(adults.vs.children.f[adults.vs.children.f$logFC < -1 &
adults.vs.children.f$FDR < 0.01,])
up.adults.vs.children.m <- nrow(adults.vs.children.m[adults.vs.children.m$logFC > 1 &
adults.vs.children.m$FDR < 0.01,])
down.adults.vs.children.m <- nrow(adults.vs.children.m[adults.vs.children.m$logFC < -1 &
adults.vs.children.m$FDR < 0.01,])
compar <- c(rep(c("Adults.vs.Children"),2),
rep(c("Elderly.vs.Children"),2),
rep(c("Elderly.vs.Adults"),2))
up <- c(up.adults.vs.children.f, up.adults.vs.children.m,
up.elderly.vs.children.f, up.elderly.vs.children.m,
up.elderly.vs.adults.f, up.elderly.vs.adults.m)
down <- c(down.adults.vs.children.f, down.adults.vs.children.m,
down.elderly.vs.children.f, down.elderly.vs.children.m,
down.elderly.vs.adults.f, down.elderly.vs.adults.m)
df <- data.frame(Comparison = compar,
Sex = rep(c("F","M"),3),
Up = up,
Down = down)
# number of diff express genes using raw counts input
#write.table(df, here("results","number_diff_express_genes_edgeR_raw_counts.tsv"),
#            sep="\t",quote=F,row.names = F)
# number of diff express genes using raw counts corrected with Combat-seq
#write.table(df, here("results","number_diff_express_genes_edgeR_Combat-seq.tsv"),
#            sep="\t",quote=F,row.names = F)
# number of diff express genes using raw counts corrected with Combat-seq curettage
#write.table(df, here("results","number_diff_express_genes_edgeR_Combat-seq_curettage.tsv"),
#            sep="\t",quote=F,row.names = F)
df
